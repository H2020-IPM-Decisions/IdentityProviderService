name: Build Docker Image And Push To Registry

on: [push]
  # push:
  #   tags:
  #     - '*.*.*'
env:
  IMAGE_NAME: h2020ipmdecisions/identityproviderservice
  BUILD_VERSION: 1.0.2
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2    
    - name: Get the version
      id: vars
      run: echo ::set-output name=tag::$(echo ${GITHUB_REF:10})
    # - name: Run tests
    #   run: TODO
    - name: Build image with latest
      run: docker build . -f "./Docker/Dockerfile" -t "${{ env.IMAGE_NAME }}:latest" --build-arg BUILDER_VERSION=latest
    - name: Build image with tag ${{ env.BUILD_VERSION }}
      run: docker build . -f "./Docker/Dockerfile" -t "${{ env.IMAGE_NAME }}:${{ env.BUILD_VERSION }}" --build-arg BUILDER_VERSION=${{ env.BUILD_VERSION }}
    - name: Login to docker hub
      uses: actions-hub/docker/login@master
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    - name: Push to docker hub :latest
      uses: actions-hub/docker@master
      with:
        args: push h2020ipmdecisions/identityproviderservice:latest
    # - name: Push to docker hub ${{ env.BUILD_VERSION }}
    #   uses: actions-hub/docker@master
    #   with:
    #     args: push ${{ env.IMAGE_NAME }}:${{ env.BUILD_VERSION }}


    
    # - name: Login to DockerHub Registry
    #   run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    # - name: Set tag
    #   id: get_tag_name
    #   run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    # - name: Build and Push docker
    #   uses: elgohr/Publish-Docker-Github-Action@master
    #   env:
    #     URL_PORT: 5000
    #     BUILD_VERSION: 1.0.2
    #   with:
    #     name: h2020ipmdecisions/identityproviderservice
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}
    #     workdir: Docker
    #     dockerfile: Dockerfile
    #     context: H2020.IPMDecisions.IDP.API
    #     buildargs: URL_PORT,BUILD_VERSION
    #     tags: "latest"
